        public static string ExportSongsAboveDuration(MusicHubDbContext context, int duration)
        {
            //using StringBuilder to gather all info in one string
            StringBuilder sb = new StringBuilder();

            //turning needed info about songs into a collection using anonymous object
            //using less data
            var songsToExport = context.Songs
                .Select(s => new
                {
                    SongName = s.Name,
                    PerformersNames = s.SongPerformers
                                       .Select(sp => $"{sp.Performer.FirstName} {sp.Performer.LastName}"),
                    WriterName = s.Writer.Name,
                    AlbumProducer = s.Album.Producer.Name,
                    Duration = s.Duration
                })
                .AsNoTracking()  //detaching from change tracker
                .ToList()
                .Where(s => s.Duration.TotalSeconds > duration)
                .OrderBy(s => s.SongName)
                .ThenBy(s => s.WriterName);

            int counter = 1;
            foreach (var song in songsToExport)
            {
                //using AppendLine so that every printing to be on separate line
                sb
                  .AppendLine($"-Song #{counter++}") //counting songs
                  .AppendLine($"---SongName: {song.SongName}")
                  .AppendLine($"---Writer: {song.WriterName}");

                if (song.PerformersNames.Any())
                {
                    foreach (var performer in song.PerformersNames.OrderBy(p => p))
                    {
                        sb.AppendLine($"---Performer: {performer}");
                    }
                }

                sb
                  .AppendLine($"---AlbumProducer: {song.AlbumProducer}")
                  .AppendLine($"---Duration: {song.Duration}");
            }

            //using Trim() to get rid of white spaces
            return sb.ToString().Trim();
        }
